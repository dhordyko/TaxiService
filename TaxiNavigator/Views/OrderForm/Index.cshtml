@model TaxiNavigator.Models.View_Models.OrderViewModel
@{
    ViewBag.Title = "OrderForm";
}

<h2>Index</h2>
<div id ="overlay" class="overlay-orderform" ></div>
<div class="register-section">
    <div class="">
        <div class="home-inner">
            <div class="container">
                <div class="row">
                    <div class="col-7 m-auto" style="">
                        <div style="margin-top:-145px" class="taxi-header-central taxi-header text-center"><strong><span class="color-2 taxi-header">T</span>axi</strong></div>
                        <div class="card bg-primary text-center card-form">
                            <div class="card-body register-card">
                                <h3 class="display-3 text-capitalize text-danger"><strong>Sign Up Today</strong></h3>
                                <p class="text-capitalize text-danger">Please fill out this form to register</p>

                                @using (Html.BeginForm("CreateOrder", "OrderForm", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <h4 class="text-capitalize text-danger">Make an order.</h4>
                                        <hr />
                                        @Html.ValidationSummary("", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(m=>m.order.Name, new { @class = "col-md-2 control-label email-input" })
                                            <div class="col-md-10 m-auto">
                                                @Html.TextBoxFor(m => m.order.Name, new { @class = "form-control m-auto" })
                                                @Html.ValidationMessageFor(m => m.order.Name)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.order.SecondName, new { @class = "col-md-2 control-label password-input" })
                                            <div class="col-md-10 m-auto">
                                                @Html.TextBoxFor(m => m.order.SecondName, new { @class = "form-control m-auto" })
                                                @Html.ValidationMessageFor(m => m.order.SecondName)
                                            </div>
                                        </div>
                                     
                                            @Html.LabelFor(m => m.order.OrderDate, new { @class = "col-md-2 control-label password-input"})
                                            <div class='input-group date m-auto' id='datetimepicker2'>
                                                @Html.TextBoxFor(m => m.order.OrderDate,new { @id="calendar", @class = "form-control mr-0", @style = "margin-left:27%; max-width:40%" })


                                                <span class="input-group-addon calendar-icon">

                                                    <span class="fa fa-calendar bg-light" onclick="Date()" ></span>
                                                </span>
                                            </div>
                                           
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.order.PhoneNumber, new { @class = "col-md-2 control-label psw-confirm-input" })
                                                <div class="col-md-10 m-auto">
                                                    @Html.TextBoxFor(m => m.order.PhoneNumber, new { @class = "form-control m-auto" })
                                                    @Html.ValidationMessageFor(m => m.order.PhoneNumber)
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(n => n.order.DriverId, new { @class = "col-md-2 control-label psw-confirm-input" })
                                                @Html.DropDownListFor(n => n.order.DriverId, new SelectList(Model.drivers, "Id", "Id"), "", new { @class = "form-control m-auto" })
                                                @Html.ValidationMessageFor(m => m.order.DriverId)
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.order.Adress, new { @class = "col-md-2 control-label psw-confirm-input" })
                                                <div class="col-md-10 m-auto">
                                                    @Html.TextBoxFor(m => m.order.Adress, new { @class = "form-control m-auto", @id = "address" })
                                                    @Html.ValidationMessageFor(m => m.order.Adress)

                                                </div>
                                                @Html.LabelFor(m => m.order.Geo, new { @class = "col-md-2 control-label psw-confirm-input" })
                                                <div class="col-md-10 m-auto">
                                                    @Html.TextBoxFor(m => m.order.Geo, new { @class = "form-control m-auto", @id = "geo" })
                                                    @Html.ValidationMessageFor(m => m.order.Geo)

                                                </div>
                                                <input type="button" value="Encode" onclick="codeAddress()">
                                            </div>
                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" class="btn btn-register bg-danger text-light" value="Register" onclick="Overlay()" />
                                                </div>
                                            </div>
                                            @Html.HiddenFor(m => m.order.Id);
                                            }

                                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
    
</div>
<br />
<br/>

    <!-- search box -->
    

<div id="google-map">
    <div class="container-fluid">
        <div class="row">
            
            <div id="map"  style="border-top:20px solid #ffd405;"></div>
        </div>
    </div>

</div>

@section scripts{
    <script>
        
        $(document).ready(function () {
            $("#datetimepicker2").datetimepicker();
            $(function () {
                var map = new google.maps.Map(document.getElementById("map"), {
                    zoom: 13,
                    center: { lat: 50.04118, lng: 21.999121 }
                    });
                var autocomplete;
                var geocoder;
                 var input = document.getElementById('address');
                var defaultPlace = new google.maps.LatLng(50.041187, 21.999121);
                var options = {
                    location: defaultPlace,
                    types: ['geocode'],
                    strictbounds:true,
                    radius: '2000',
                    componentRestrictions: { country: "pl" }// (cities)
                };

                autocomplete = new google.maps.places.Autocomplete(input, options);

            });
                 });
        
        
        function codeAddress() {
            var map = new google.maps.Map(document.getElementById("map"), {
                zoom: 13,
                center: { lat: 50.04118, lng: 21.999121 }
            });

            var geocoder = new google.maps.Geocoder();

            var address = $('#address').val();
            var geolog = $('#geo');
            window.alert(address);
            geocoder.geocode({ address: address }, function (results, status) {
                window.alert(status);
                var lat = results[0].geometry.location.lat();
                var lng = results[0].geometry.location.lng();
                if (status === 'OK') {

                    map.setCenter(results[0].geometry.location);
                    geolog.val(('POINT '+'('+ lng + ' '+ lat+')' ));
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }

            })
        };
      
        





        
        
    </script>
 

<script src="https://maps.google.com/maps/api/js?key=AIzaSyBVgHD3E6F94DmDyYQ9svslsLf8d4JoALA&libraries=places" type="text/javascript"></script>

    @*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVgHD3E6F94DmDyYQ9svslsLf8d4JoALA&callback=initMap&libraries=places">*@

    

}